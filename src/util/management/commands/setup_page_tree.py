from pathlib import Path

from django.conf import settings
from django.core.files import File
from django.core.management.base import BaseCommand
from wagtail.models import Page, Site
from wagtail.documents.models import Document

from msl_about.models import AboutMSLPage, CommonPage, EnrollmentsPage, PointsAndFinancesPage, RoundsPage
import home
from home.models import HomePage
from msl_about.models import EnrollPage
from msl_news.models import NewsIndexPage, NewsPage
from util.models import GDPRPage


APP_DIR = Path(__file__).resolve().parent.parent.parent
FIXTURES_DIR = APP_DIR.joinpath("fixtures")
DOCUMENTS_DIR = APP_DIR.joinpath("sample_documents")  # Path to sample documents


class Command(BaseCommand):
    """
    this command is used to create the initial wagtail cms page tree
    """

    help = "creates initial wagtail cms page tree"
    requires_system_checks = []

    def _setup(self):
        self._setup_root_page()
        self._setup_msl_news()
        self._setup_msl_about()
        self._setup_gdpr_page()
        self._setup_documents()

    def _setup_root_page(self):
        self.stdout.write("Setting up root page...")
        # Delete the default homepage created by wagtail migrations If migration is run
        # multiple times, it may have already been deleted
        Page.objects.filter(id=2).delete()

        root = Page.get_first_root_node()
        home_page = HomePage(
            title = "Domovsk√° str√°nka",
            show_in_menus=True,
        )
        root.add_child(instance=home_page)
        # Create a site with the new LanguageRedirectionPage set as the root
        # Note: this is wagtail's Site model, not django's.
        Site.objects.create(
            hostname="msliga.cz",
            root_page=home_page,
            is_default_site=True,
            site_name="MS liga v P√ö",
        )


    def _setup_msl_news(self):
        """Creates the language specific home pages."""
        self.stdout.write("Setting up 'news'...")
        home_page = HomePage.objects.first()
        news_index_page = NewsIndexPage(
            title="Aktuality",
            slug="aktuality",
            show_in_menus=True
        )
        home_page.add_child(instance=news_index_page)
        if settings.DEBUG:
            news_index_page.add_child(
                instance=NewsPage(
                    title="Nov√© str√°nky MS ligy",
                    author="Adam Strako≈°",
                    body="<p>V√≠tejte na nov√Ωch str√°nk√°ch MS ligy v P√ö.</p> <p>Po nƒõjakou dobu pobƒõ≈æ√≠ nov√© str√°nky paralelnƒõ se "
                         "star√Ωmi, ale nov√© vƒõci budou p≈ôid√°v√°ny pouze tady na nov√Ω web. " \
                         "Historick√© v√Ωsledky a jin√° data budou postupnƒõ p≈ôeneseny na nov√© str√°nky. " \
                         "Z√°rove≈à zde chyb√≠ st√°le asi nejd≈Øle≈æitƒõj≈°√≠ funkcionalita, a to \"v√Ωsledky\" a \"tipov√°n√≠\" - ta bude " \
                         "do≈ôe≈°ena bƒõhem tohoto mƒõs√≠ce p≈ôed prvn√≠m kolem MSL v Bru≈°perku. " \
                         "Tak√© mo≈æn√° dojde k drobn√Ωm designov√Ωm √∫prav√°m.</p> <p>Pokud by nƒõkdo narazil na nƒõjakou nefunkƒçnost " \
                         "nebo nesrovnalost, dejte mi pros√≠m vƒõdƒõt na mail nebo p≈ôes soc. s√≠tƒõ (viz patiƒçka webu). "
                         "Jinak pros√≠m o strpen√≠ - dƒõl√°m to ve voln√©m ƒçase a zadarmo.</p> <p>D√≠ky za pochopen√≠ a " \
                         "mo≈æn√° se uvid√≠me na zahajovac√≠m kole v Bru≈°perku. üòã</p>"
                )
            ),
            # news_index_page.add_child(
            #     instance=NewsPage(
            #         title="Druh√° novinka",
            #         author="Adam Strakos",
            #         body="Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
            #     )
            # ),
            # news_index_page.add_child(
            #     instance=NewsPage(
            #         title="T≈ôet√≠ novinka",
            #         author="Adam Strakos",
            #         body="Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
            #     )
            # )

    def _setup_msl_about(self):
        self.stdout.write("Setting up 'msl_about'...")
        home_page = HomePage.objects.first()
        msl_about = AboutMSLPage(
            title="O MS lize",
            show_in_menus=True
        )
        home_page.add_child(instance=msl_about)
        msl_about.add_child(
            instance=CommonPage(
                title="Dokumenty",
                show_in_menus=True
            )
        )
        msl_about.add_child(
            instance=RoundsPage(
                title="Ligov√° kola",
                show_in_menus=True
            )
        )
        msl_about.add_child(
            instance=PointsAndFinancesPage(
                title="Body a fin. ohodnocen√≠",
                show_in_menus=True
            )
        )
        msl_about.add_child(
            instance=EnrollmentsPage(
                title="P≈ôihl√°≈°en√© t√Ωmy do MSL 2025",
                show_in_menus=False
            )
        )
        enroll_page = EnrollPage(
            title="P≈ôihl√°≈°ka do MSL 2025",
            year=2025,
            admin_email="rada.msl@seznam.cz",
            slug="prihlaska-do-ms-ligy",
            show_in_menus=True
        )
        home_page.add_child(instance=enroll_page)

    def _setup_gdpr_page(self):
        self.stdout.write("Setting up 'gdpr_page'...")
        home_page = HomePage.objects.first()
        gdpr_page = GDPRPage(
            title="Informace o zpracov√°n√≠ osobn√≠ch √∫daj≈Ø (GDPR)",
            slug="gdpr",
            show_in_menus=False,
            body="""
                <h2>I. Z√°kladn√≠ ustanoven√≠</h2>
                <p>Spr√°vcem osobn√≠ch √∫daj≈Ø podle ƒçl. 4 bod 7 na≈ô√≠zen√≠ Evropsk√©ho parlamentu a Rady (EU) 2016/679 o ochranƒõ fyzick√Ωch osob v souvislosti se zpracov√°n√≠m osobn√≠ch √∫daj≈Ø a o voln√©m pohybu tƒõchto √∫daj≈Ø (d√°le jen: ‚ÄûGDPR") je MORAVSKOSLEZSK√Å LIGA v po≈æ√°rn√≠m √∫toku !, spolek se s√≠dlem Lubno 303, 73911 Fr√Ωdlant nad Ostravic√≠ (d√°le jen: ‚Äûspr√°vce").</p>
                <p>Kontaktn√≠ √∫daje spr√°vce jsou<br>
                Radom√≠r Viej<br>
                email: rawio@seznam.cz</p>
                <p>Osobn√≠mi √∫daji se rozum√≠ ve≈°ker√© informace o identifikovan√© nebo identifikovateln√© fyzick√© osobƒõ; identifikovatelnou fyzickou osobou je fyzick√° osoba, kterou lze p≈ô√≠mo ƒçi nep≈ô√≠mo identifikovat, zejm√©na odkazem na urƒçit√Ω identifik√°tor, nap≈ô√≠klad jm√©no, identifikaƒçn√≠ ƒç√≠slo, lokaƒçn√≠ √∫daje, s√≠≈•ov√Ω identifik√°tor nebo na jeden ƒçi v√≠ce zvl√°≈°tn√≠ch prvk≈Ø fyzick√©, fyziologick√©, genetick√©, psychick√©, ekonomick√©, kulturn√≠ nebo spoleƒçensk√© identity t√©to fyzick√© osoby.</p>
                <p>Spr√°vce nejmenoval povƒõ≈ôence pro ochranu osobn√≠ch √∫daj≈Ø.</p>

                <h2>II. Zdroje a kategorie zpracov√°van√Ωch osobn√≠ch √∫daj≈Ø</h2>
                <p>Spr√°vce zpracov√°v√° osobn√≠ √∫daje, kter√© jste mu poskytl/a nebo osobn√≠ √∫daje, kter√© spr√°vce z√≠skal na z√°kladƒõ registrace na webu ƒçi vypl≈àov√°n√≠ p≈ôihl√°≈°ek.</p>
                <p>Spr√°vce zpracov√°v√° Va≈°e identifikaƒçn√≠ a kontaktn√≠ √∫daje a √∫daje nezbytn√© pro plnƒõn√≠ smlouvy.</p>

                <h2>III. Z√°konn√Ω d≈Øvod a √∫ƒçel zpracov√°n√≠ osobn√≠ch √∫daj≈Ø</h2>
                <p>Z√°konn√Ωm d≈Øvodem zpracov√°n√≠ osobn√≠ch √∫daj≈Ø je</p>
                <ul>
                <li>plnƒõn√≠ smlouvy mezi V√°mi a spr√°vcem podle ƒçl. 6 odst. 1 p√≠sm. b) GDPR,</li>
                <li>opr√°vnƒõn√Ω z√°jem spr√°vce na poskytov√°n√≠ p≈ô√≠m√©ho marketingu (zejm√©na pro zas√≠l√°n√≠ obchodn√≠ch sdƒõlen√≠ a newsletter≈Ø) podle ƒçl. 6 odst. 1 p√≠sm. f) GDPR,</li>
                <li>V√°≈° souhlas se zpracov√°n√≠m pro √∫ƒçely poskytov√°n√≠ p≈ô√≠m√©ho marketingu (zejm√©na pro zas√≠l√°n√≠ obchodn√≠ch sdƒõlen√≠ a newsletter≈Ø) podle ƒçl. 6 odst. 1 p√≠sm. a) GDPR ve spojen√≠ s ¬ß 7 odst. 2 z√°kona ƒç. 480/2004 Sb., o nƒõkter√Ωch slu≈æb√°ch informaƒçn√≠ spoleƒçnosti v p≈ô√≠padƒõ, ≈æe nedo≈°lo k registraci nebo vyplnƒõn√≠ p≈ôihl√°≈°ky.</li>
                </ul>
                <p>√öƒçelem zpracov√°n√≠ osobn√≠ch √∫daj≈Ø je</p>
                <ul>
                <li>vy≈ô√≠zen√≠ Va≈°√≠ p≈ôihl√°≈°ky a v√Ωkon pr√°v a povinnost√≠ vypl√Ωvaj√≠c√≠ch ze vztahu mezi V√°mi a spr√°vcem; p≈ôi vyplnƒõn√≠ p≈ôihl√°≈°ky jsou vy≈æadov√°ny osobn√≠ √∫daje, kter√© jsou nutn√© pro √∫spƒõ≈°n√© vy≈ô√≠zen√≠ (jm√©no a adresa, kontakt), poskytnut√≠ osobn√≠ch √∫daj≈Ø je nutn√Ωm po≈æadavkem pro registraci do ligy,</li>
                <li>zas√≠l√°n√≠ obchodn√≠ch sdƒõlen√≠ a ƒçinƒõn√≠ dal≈°√≠ch marketingov√Ωch aktivit.</li>
                </ul>
                <p>Ze strany spr√°vce nedoch√°z√≠ k automatick√©mu individu√°ln√≠mu rozhodov√°n√≠ ve smyslu ƒçl. 22 GDPR. S takov√Ωm zpracov√°n√≠m jste poskytl/a sv≈Øj v√Ωslovn√Ω souhlas.</p>

                <h2>IV. Doba uchov√°v√°n√≠ √∫daj≈Ø</h2>
                <p>Spr√°vce uchov√°v√° osobn√≠ √∫daje</p>
                <ul>
                <li>po dobu nezbytnou k v√Ωkonu pr√°v a povinnost√≠ vypl√Ωvaj√≠c√≠ch ze vztahu mezi V√°mi a spr√°vcem a uplat≈àov√°n√≠ n√°rok≈Ø z tƒõchto smluvn√≠ch vztah≈Ø (po dobu 15 let od ukonƒçen√≠ smluvn√≠ho vztahu).</li>
                <li>po dobu, ne≈æ je odvol√°n souhlas se zpracov√°n√≠m osobn√≠ch √∫daj≈Ø pro √∫ƒçely marketingu, nejd√©le 15 let, jsou-li osobn√≠ √∫daje zpracov√°v√°ny na z√°kladƒõ souhlasu.</li>
                </ul>
                <p>Po uplynut√≠ doby uchov√°v√°n√≠ osobn√≠ch √∫daj≈Ø spr√°vce osobn√≠ √∫daje vyma≈æe.</p>

                <h2>V. P≈ô√≠jemci osobn√≠ch √∫daj≈Ø (subdodavatel√© spr√°vce)</h2>
                <p>P≈ô√≠jemci osobn√≠ch √∫daj≈Ø jsou osoby</p>
                <ul>
                <li>pod√≠lej√≠c√≠ se na spr√°vƒõ ligy a jej√≠ organizaci,</li>
                <li>zaji≈°≈•uj√≠c√≠ provozov√°n√≠ webu ligy,</li>
                <li>zaji≈°≈•uj√≠c√≠ marketingov√© slu≈æby.</li>
                </ul>
                <p>Spr√°vce m√° v √∫myslu p≈ôedat osobn√≠ √∫daje do t≈ôet√≠ zemƒõ (do zemƒõ mimo EU) nebo mezin√°rodn√≠ organizaci. P≈ô√≠jemci osobn√≠ch √∫daj≈Ø ve t≈ôet√≠ch zem√≠ch jsou poskytovatel√© mailingov√Ωch slu≈æeb.</p>
            """
        )
        home_page.add_child(instance=gdpr_page)

    def _setup_documents(self):
        """Adds sample documents to the Documents page."""
        self.stdout.write("Setting up documents...")

        # Find the Documents page
        documents_page = CommonPage.objects.filter(title="Dokumenty").first()

        if not documents_page:
            self.stdout.write(self.style.WARNING("Documents page not found, skipping document attachment"))
            return

        # Check if the documents directory exists
        if not DOCUMENTS_DIR.exists():
            DOCUMENTS_DIR.mkdir(parents=True)
            self.stdout.write(self.style.WARNING(f"Created documents directory at {DOCUMENTS_DIR}"))
            return

        # Get all files from the documents directory
        document_files = [f for f in DOCUMENTS_DIR.iterdir() if f.is_file()]

        # Upload each document
        document_links = []
        for doc_path in document_files:
            with open(doc_path, 'rb') as doc_file:
                # Create the document in Wagtail
                document = Document(
                    title=doc_path.stem.replace('_', ' ').title(),
                    file=File(doc_file, name=doc_path.name)
                )
                document.save()

                # Create a rich text link to the document
                document_links.append(f'<li><a href="{document.file.url}">{document.title}</a></li>')

                self.stdout.write(f"Added document: {document.title}")

        # If the page has a body field, update it with links to documents
        # if hasattr(documents_page, 'body'):
        #     documents_page.body = f"""
        #     <h2>Sez√≥na 2025</h2>
        #     <ul>
        #     {''.join(document_links)}
        #     </ul>
        #     """
        #     documents_page.save()

        self.stdout.write(self.style.SUCCESS(f"Added {len(document_files)} documents to the Documents page"))

    def handle(self, raise_error=False, *args, **options):
        # Root Page and a default homepage are created by wagtail migrations so check
        # for > 2 here
        verbosity = options["verbosity"]
        checks = [Page.objects.all().count() > 2]
        if any(checks):
            # YOU SHOULD NEVER RUN THIS COMMAND WITHOUT PRIOR DB DUMP
            raise RuntimeError("Pages exists. Aborting.")

        self._setup()
        if verbosity > 0:
            msg = "Page Tree successfully created."
            self.stdout.write(msg)
